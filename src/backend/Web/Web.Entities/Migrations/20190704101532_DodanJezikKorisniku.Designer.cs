// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Entities;

namespace Web.Entities.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190704101532_DodanJezikKorisniku")]
    partial class DodanJezikKorisniku
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web.Entities.Models.Base.Dokument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Naziv");

                    b.Property<string>("Putanja");

                    b.HasKey("Id");

                    b.ToTable("Dokumenti");
                });

            modelBuilder.Entity("Web.Entities.Models.Base.LogAkcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Akcija");

                    b.Property<DateTime>("DatumAkcije");

                    b.Property<int>("Kategorija");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(64);

                    b.Property<int>("Level");

                    b.Property<string>("Opis");

                    b.HasKey("Id");

                    b.HasIndex("KorisnickoIme");

                    b.ToTable("LogAkcije");
                });

            modelBuilder.Entity("Web.Entities.Models.Base.LogEntitet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumAkcije");

                    b.Property<int>("Entitet");

                    b.Property<int>("EntitetId");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(64);

                    b.Property<string>("Vrijednost");

                    b.HasKey("Id");

                    b.HasIndex("KorisnickoIme");

                    b.ToTable("LogEntiteti");
                });

            modelBuilder.Entity("Web.Entities.Models.Base.Postavke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutorskaPravaKarte")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("NaslovSistema")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("TrajanjeSesije");

                    b.Property<string>("UrlKarte")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Postavke");
                });

            modelBuilder.Entity("Web.Entities.Models.Korisnik.Korisnik", b =>
                {
                    b.Property<string>("KorisnickoIme")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64);

                    b.Property<string>("BrojMobitela");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<bool>("EmailVerifikovan");

                    b.Property<int?>("Jezik");

                    b.Property<string>("ModifiedBy");

                    b.Property<bool>("Onemogucen");

                    b.Property<string>("PunoIme")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<byte[]>("Tajna");

                    b.Property<int>("UlogaDisc");

                    b.HasKey("KorisnickoIme");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.HasIndex("UlogaDisc");

                    b.ToTable("Korisnici");

                    b.HasDiscriminator<int>("UlogaDisc").HasValue(0);
                });

            modelBuilder.Entity("Web.Entities.Models.Korisnik.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DatumIsteka");

                    b.Property<DateTime>("DatumKreiranja");

                    b.Property<DateTime>("DatumPosljednjeAkcije");

                    b.Property<string>("PosljednjiIp")
                        .HasMaxLength(256);

                    b.Property<string>("PosljednjiKlijent")
                        .HasMaxLength(256);

                    b.Property<int>("Tip");

                    b.Property<string>("VlasnikKorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("VlasnikKorisnickoIme");

                    b.ToTable("Tokeni");
                });

            modelBuilder.Entity("Web.Entities.Models.Sifarnik.LogKategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("Poredak");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("VrijednostUAplikaciji");

                    b.HasKey("Id");

                    b.ToTable("LogKategorije");
                });

            modelBuilder.Entity("Web.Entities.Models.Sifarnik.LogLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("Poredak");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("VrijednostUAplikaciji");

                    b.HasKey("Id");

                    b.ToTable("LogLeveli");
                });

            modelBuilder.Entity("Web.Entities.Models.Sifarnik.Prevod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<int>("Jezik");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Polje");

                    b.Property<string>("PrevodTekst");

                    b.Property<int>("RedId");

                    b.Property<string>("Tabela");

                    b.HasKey("Id");

                    b.ToTable("Prevodi");
                });

            modelBuilder.Entity("Web.Entities.Models.Sifarnik.Uloga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("Poredak");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("VrijednostUAplikaciji");

                    b.HasKey("Id");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("Web.Entities.Models.Sifarnik.VrstaLogAkcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene");

                    b.Property<DateTime?>("DatumKreiranja");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("Poredak");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("VrijednostUAplikaciji");

                    b.HasKey("Id");

                    b.ToTable("VrsteLogAkcija");
                });

            modelBuilder.Entity("Web.Entities.Models.Korisnik.KorisnikAdministrator", b =>
                {
                    b.HasBaseType("Web.Entities.Models.Korisnik.Korisnik");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Web.Entities.Models.Base.LogAkcija", b =>
                {
                    b.HasOne("Web.Entities.Models.Korisnik.Korisnik", "Korisnik")
                        .WithMany("LogAkcije")
                        .HasForeignKey("KorisnickoIme");
                });

            modelBuilder.Entity("Web.Entities.Models.Base.LogEntitet", b =>
                {
                    b.HasOne("Web.Entities.Models.Korisnik.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnickoIme");
                });

            modelBuilder.Entity("Web.Entities.Models.Korisnik.Token", b =>
                {
                    b.HasOne("Web.Entities.Models.Korisnik.Korisnik", "Vlasnik")
                        .WithMany()
                        .HasForeignKey("VlasnikKorisnickoIme")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
